<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <!-- 一个sessionFactory代表数据库的一个连接 -->
    <session-factory>
        <!-- 开启查询缓存 -->
        <property name="cache.use_query_cache">false</property>
        <!-- 开启二级缓存 -->
        <property name="cache.use_second_level_cache">false</property>
        <!-- 开启二级缓存的统计机制 -->
        <property name="generate_statistics">false</property>

        <!-- 链接数据库的用户名 -->
        <property name="connection.username">root</property>
        <!-- 链接数据库的密码 -->
        <property name="connection.password">123456</property>
        <!-- 链接数据库的驱动 -->
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <!-- 链接数据库的url -->
        <property name="connection.url">jdbc:mysql://localhost:3306/day161229hibernate_basement</property>
        <!-- 使用同一个session -->
        <property name="current_session_context_class">thread</property>
        <!-- 方言 告诉hibernate使用什么样的数据库，hibernate就会在底层拼接什么样的sql语句 -->
        <property name="dialect">
            org.hibernate.dialect.MySQLDialect
        </property>

        <!-- 根据持久化类生成表的策略 validate 通过映射文件检查持久化类与表是否匹配. update 每次hibernate启动的时候，根据映射文件检查表是否存在，如果不存在，则创建，如果存在，则什么都不做了
            create 每次hibernate容器启动的时候，根据持久化类和映射文件生成表 create-drop 每次hibernate容器启动的时候，根据持久化类和映射文件生成表，关闭了就删除表 -->
        <property name="hbm2ddl.auto">update</property>

        <!-- 每次查询都要显示SQL语句 -->
        <property name="show_sql">true</property>
        <!-- 是否格式化sql语句 -->
        <property name="format_sql">true</property>
        <!--导入持久化类和表的影映射文件 -->
        <mapping resource="k_spring_hibernate/configFiles/Person.hbm.xml"/>
        <mapping resource="k_spring_hibernate/configFiles/Team.hbm.xml"/>

    </session-factory>


</hibernate-configuration>